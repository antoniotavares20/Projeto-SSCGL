package br.com.rda.sistaplog.controller;



import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.thymeleaf.spring5.view.ThymeleafView;

import br.com.rda.sistaplog.models.Convidado;
import br.com.rda.sistaplog.models.Evento;
import br.com.rda.sistaplog.repository.ConvidadoRepository;
import br.com.rda.sistaplog.repository.EventoRepository;

@Controller
public class EventoController {
	
	@Autowired
	private EventoRepository er;

	@Autowired
	private ConvidadoRepository cr;

	@RequestMapping(value = "/cadastrarEvento", method = RequestMethod.GET)
	public String form() {
		return "evento/formEvento";
	}
	
	@RequestMapping(value="/cadastrarEvento", method=RequestMethod.POST)
	public String form(@Valid Evento evento, BindingResult result, RedirectAttributes attributes){
		if(result.hasErrors()){
			attributes.addFlashAttribute("mensagem", "Verifique os campos!");
			return "redirect:/cadastrarEvento";
		}
		
		er.save(evento);
		attributes.addFlashAttribute("mensagem", "Evento cadastrado com sucesso!");
		return "redirect:/cadastrarEvento";
	}
	
	@RequestMapping("/eventos")
	public ModelAndView listaEventos(){
		ModelAndView mv = new ModelAndView("index");
		Iterable<Evento> eventos = er.findAll();
		mv.addObject("eventos", eventos);
		return mv;
	}
	

	@RequestMapping(value="/{codigo}", method=RequestMethod.GET)
	public ModelAndView detalhesEvento(@PathVariable("codigo") long codigo){
		Evento evento = er.findByCodigo(codigo);
		ModelAndView mv = new ModelAndView("evento/detalhesEvento");
		mv.addObject("evento", evento);
		
		Iterable<Convidado> convidados = cr.findByEvento(evento);
		mv.addObject("convidados", convidados);
		
		return mv;
	}
		@RequestMapping("/deletarEvento")
		public String deletarEvento(long codigo){
			Evento evento = er.findByCodigo(codigo);
			er.delete(evento);
			return "redirect:/eventos";
		}
		@RequestMapping(value="/{codigo}", method=RequestMethod.POST)
		public String detalhesEventoPost(@PathVariable("codigo") long codigo, @Valid Convidado convidado,  BindingResult result, RedirectAttributes attributes){
			if(result.hasErrors()){
				attributes.addFlashAttribute("mensagem", "Verifique os campos!");
				return "redirect:/{codigo}";
			}
			Evento evento = er.findByCodigo(codigo);
			convidado.setEvento(evento);
			cr.save(convidado);
			attributes.addFlashAttribute("mensagem", "Convidado adicionado com sucesso!");
			return "redirect:/{codigo}";
		}
		
		@RequestMapping("/deletarConvidado")
		public String deletarConvidado(String rg){
			Convidado convidado = cr.findByRg(rg);
			cr.delete(convidado);
			
			Evento evento = convidado.getEvento();
			long codigoLong = evento.getCodigo();
			String codigo = "" + codigoLong;
			return "redirect:/" + codigo;
		}
		
		@Bean(name="content-part")
		@Scope("prototype")
		public  ThymeleafView someViewBean() {
		    ThymeleafView view = new ThymeleafView("index"); // templateName = 'index'
		    view.setMarkupSelector("content");
		    return view;
		}
		
		@RequestMapping("/lista-de-eventos")
		public String showContentPart() {
		    
		    return "/listaEventos";
		}
		
		
	}	